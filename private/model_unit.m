function varargout = model_unit(h, eventdata, handles, varargin)

% define the motor-unit model parameters

data = guidata(h);
if ~isfield(data, 'mu')
  % specify the defaults
  data.mu.pos  = [0 0 -15];
  data.mu.az   = 90;
  data.mu.el   = 0;
  data.mu.cv   = 3.5;
  data.mu.on   = 0;
  data.mu.size = 1;
  data.mu.tendon1 = Inf;
  data.mu.tendon2 = Inf;
end

prompt  = {'Location x (mm):',...
           'Location y (mm):',...
           'Location z (mm):',...
           'Length to 1st tendon (mm):',...
           'Length to 2nd tendon (mm):',...
           'Orientation azimuth (deg):',...
           'Orientation elevation (deg):',...
           'Conduction velocity (mm/ms):',...
           'Onset time (ms)',...
           'MU size'};
defaults = {num2str(data.mu.pos(1)),...
            num2str(data.mu.pos(2)),...
            num2str(data.mu.pos(3)),...
            num2str(data.mu.tendon1),...
            num2str(data.mu.tendon2),...
            num2str(data.mu.az),...
            num2str(data.mu.el),...
            num2str(data.mu.cv),...
            num2str(data.mu.on),...
            num2str(data.mu.size)};
answer = inputdlg(prompt,'Motor-unit parameters',1,defaults);

if ~isempty(answer)
  data.mu.pos(1)  = str2double(answer{1});
  data.mu.pos(2)  = str2double(answer{2});
  data.mu.pos(3)  = str2double(answer{3});
  data.mu.tendon1 = str2double(answer{4});
  data.mu.tendon2 = str2double(answer{5});
  data.mu.az      = str2double(answer{6});
  data.mu.el      = str2double(answer{7});
  data.mu.cv      = str2double(answer{8});
  data.mu.on      = str2double(answer{9});
  data.mu.size    = str2double(answer{10});
  guidata(h, data);
  % recompute the model potential
  compute_potential;
end
 
